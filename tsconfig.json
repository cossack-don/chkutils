{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"],
      "@libs/*": ["./src/lib/*"]
    },

    "outDir": "./dist", // Папка, куда будут помещены скомпилированные файлы
    "rootDir": "./src", // Папка с исходным кодом
    "declaration": true, // Включает генерацию .d.ts файлов
    "declarationDir": "./dist/types", // Опционально: папка для .d.ts файлов
    "module": "ESNext",
    "esModuleInterop": true, // Упрощает работу с CommonJS и ES модулями

    "target": "ES6",
    "useDefineForClassFields": true,

    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    //TODO Параметр "noEmit": true
    // указывает TypeScript только проверять типы, но не генерировать файлы.
    //Это полезно в режиме разработки, когда вы используете сборщики (например, Webpack, Vite),
    //которые сами занимаются генерацией файлов. Однако, если вы хотите, чтобы TypeScript генерировал файлы,
    //этот параметр нужно удалить или установить в false.
    "noEmit": false, // "noEmit": true сборщик будет генерить сам типы
    //TODO Если вы хотите, чтобы TypeScript генерировал только .d.ts файлы (без .js),
    // вы можете использовать "emitDeclarationOnly": true. Это подходит, если вы хотите генерировать типы, но не хотите,
    // чтобы TypeScript генерировал JavaScript-файлы.
    "emitDeclarationOnly": true, // TypeScript будет генерировать только файлы с типами, но не JavaScript.

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true,

    //other

  },
  "include": ["src/**/*", "global.d.ts","vite.config.ts"]
}
